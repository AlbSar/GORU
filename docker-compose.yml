version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: gorupg
    environment:
      POSTGRES_USER: goru
      POSTGRES_PASSWORD: goru
      POSTGRES_DB: goru_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U goru -d goru_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Backend API Service
  backend:
    build:
      context: ./backend
      target: development
      dockerfile: Dockerfile
    container_name: gorubackend
    environment:
      - DATABASE_URL=postgresql://goru:goru@db:5432/goru_db
      - ENVIRONMENT=development
      - DEBUG=true
      - PYTHONPATH=/app
      - LOG_LEVEL=DEBUG
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/htmlcov
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Production Backend (isteğe bağlı)
  backend-prod:
    build:
      context: ./backend
      target: production
      dockerfile: Dockerfile
    container_name: gorubackend-prod
    environment:
      - DATABASE_URL=postgresql://goru:goru@db:5432/goru_db
      - ENVIRONMENT=production
      - DEBUG=false
      - LOG_LEVEL=INFO
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8001:8000"
    restart: unless-stopped
    profiles:
      - production
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Test Service
  test:
    build:
      context: ./backend
      target: test
      dockerfile: Dockerfile
    container_name: gorutest
    environment:
      - DATABASE_URL=postgresql://goru:goru@db:5432/goru_db
      - ENVIRONMENT=test
      - DEBUG=true
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/__pycache__
      - /app/.pytest_cache
      - /app/htmlcov
    profiles:
      - test

volumes:
  pgdata:
    driver: local 